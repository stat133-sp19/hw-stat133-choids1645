generate <- function() {
i_sample <- rbinom(1000, 5, 0.4)
mleP <- sum(i_sample)/5000
i_obs <- table(i_sample)
i_exp <- 1000 * c((1-mleP)^5, 5*((1-mleP)^4)*mleP, 10*((1-mleP)^3)*mleP^2, 10*((1-mleP)^2)*mleP^3, 5*((1-mleP)^1)*mleP^4, mleP^5)
i_pearson <- sum(((i_obs - i_exp)^2)/i_exp)
i_chi <- 2 * sum(i_obs*log(i_obs/i_exp))
chi_value <- c(i_pearson, i_chi)
return(chi_value)
}
out <- replicate(2000, generate())
out <- t(out)
colnames(out) <- c("Pearson", "Chi Value")
View(out)
View(out)
chis <- sapply(c(1:2000), generate)
library(ggplot2)
library(dplyr)
df <- data.frame(out)
View(df)
View(df)
generate <- function() {
i_sample <- rbinom(1000, 5, 0.4)
mleP <- sum(i_sample)/5000
i_obs <- table(i_sample)
i_exp <- 1000 * c((1-mleP)^5, 5*((1-mleP)^4)*mleP, 10*((1-mleP)^3)*mleP^2, 10*((1-mleP)^2)*mleP^3, 5*((1-mleP)^1)*mleP^4, mleP^5)
i_pearson <- sum(((i_obs - i_exp)^2)/i_exp)
i_chi <- 2 * sum(i_obs*log(i_obs/i_exp))
chi_value <- c(i_pearson, i_chi)
return(chi_value)
}
out <- replicate(2000, generate())
out <- t(out)
colnames(out) <- c("Pearson", "Chi Value")
df <- data.frame(out)
df %>% ggplot() + geom_histogram(aes(x = Chi.Value, y = ..density..), bins = 50) + stat_function(fun = dchisq, args = 4, color = "red") + labs(title = "X = -2logLamda", x = "Chi-Squared Value")
df %>% ggplot() + geom_histogram(aes(x = Pearson, y = ..density..), bins = 50) + stat_function(fun = dchisq, args = 4, color = "red") + labs(title = "Pearson Estimates", x = "Chi-Squared Value")
install.packages("testthat")
shiny::runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/demo')
?colors
colors()
return("yellow" == colors())
"yellow" == colors()
which("yellow" == colors())
which("yellowdfa" == colors())
is.integer(which("yellow" == colors()))
is.integer(which("yellowasdfa" == colors()))
(which("yellowasdfa" == colors())) > 0
(which("yellow" == colors())) > 0
is.color("yellow")
?is.color
"adf"
length("adf")
knitr::opts_chunk$set(echo = TRUE)
library(testthat)
alabama <- nchar(states[1])
head(USArrests)
states <- rownames(USArrests)
num_chars <- nchar(states)
tolower(states)
toupper(states)
casefold(states)
table(num_chars)
table(num_chars)
head(USArrests)
states <- rownames(USArrests)
num_chars <- nchar(states)
tolower(states)
toupper(states)
casefold(states)
char_freqs <- table(num_chars)/length(num_chars)
char_freqs
num_chars
table(num_chars)
?barplot
table(num_chars)
char_freqs <- table(num_chars)/length(num_chars)
char_freqs <- data.frame(char_freqs)
View(char_freqs)
View(char_freqs)
knitr::opts_chunk$set(echo = TRUE)
library(testthat)
library(ggplot2)
library(dplyr)
table(num_chars)
char_freqs <- table(num_chars)/length(num_chars)
char_freqs <- data.frame(char_freqs)
barplot(char_freqs)
table(num_chars)
char_freqs <- table(num_chars)/length(num_chars)
char_freqs <- data.frame(char_freqs)
barplot(char_freqs[,2])
table(num_chars)
char_freqs <- table(num_chars)/length(num_chars)
char_freqs <- as.matrix(char_freqs)
barplot(char_freqs)
table(num_chars)
char_freqs <- table(num_chars)/length(num_chars)
char_freqs <- data.frame(char_freqs)
barplot(char_freqs[,2])
table(num_chars)
char_freqs <- table(num_chars)/length(num_chars)
barplot(char_freqs)
char_freqs <- data.frame(char_freqs)
barplot(char_freqs[,2])
table(num_chars)
char_freqs <- table(num_chars)/length(num_chars)
barplot(char_freqs, xlab="num_chars", ylab = "freq")
table(num_chars)
char_freqs
table(num_chars)
char_freqs <- table(num_chars)/length(num_chars)
char_freqs
barplot(char_freqs, xlab="num_chars", ylab = "freq", ylim = c(0, 0.3))
knitr::opts_chunk$set(echo = TRUE)
x_i <- c(1997, 906, 904, 32)
lik <- function(theta) {
sum <- dmultinom(x = x_i, size = sum(x_i), prob = c( (0.25*(2+theta)), (0.25*(1-theta)), (0.25*(1-theta)), (0.25*theta) ))
return(sum)
}
theta_opt <- optimize(lik, c(0, 1), maximum = TRUE)
mle_theta <- theta_opt$maximum
mle_theta
expected <- sum(x_i) * c( (0.25*(2+mle_theta)), (0.25*(1-mle_theta)), (0.25*(1-mle_theta)), (0.25*mle_theta) )
rejection <- 2 * sum(x_i * log(x_i/expected))
rejection
pval <- 1 - pchisq(q=rejection, df = 2)
pval
# pval is greater than 0.05, failing to reject the fit.
View(theta_opt)
View(theta_opt)
chisq.test(x_i, p = c( (0.25*(2+mle_theta)), (0.25*(1-mle_theta)), (0.25*(1-mle_theta)), (0.25*mle_theta) ), correct = FALSE)
install.packageo("colourpicker")
install.packages("colourpicker")
getwd()
library(shiny); runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lab/lab10/lab10-shiny-apps/app2.R')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lab/lab10/lab10-shiny-apps/app1.R')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lab/lab10/lab10-shiny-apps/app2.R')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lab/lab10/lab10-shiny-apps/app3.R')
sample.int(100)
order(sample.int(100))
sample.int(100) == 1
sum(sample.int(100) == 1)
sum(sample.int(100) == 1)
sum(sample.int(100) == 1)
sum(sample.int(100) == 1)
set.seed(1234)
sample.int(10)
sample.int(10)
sample.int(10)
set.seed(1234)
set.seed(1234)
sample.int(10)
sample.int(10)
sample.int(10)
sample.int(10)
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lab/lab10/lab10-shiny-apps/app3.R')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lab/lab10/lab10-shiny-apps/app3.R')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lab/lab10/lab10-shiny-apps/app2.R')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lab/lab10/lab10-shiny-apps/app3.R')
runApp('C:/Users/daese/Desktop/school/Stat 133/Stat 133/Labs/lab11-sang-oh/app3.R')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lab/lab10/lab10-shiny-apps/app3.R')
runApp('C:/Users/daese/Desktop/school/Stat 133/Stat 133/Labs/lab11-sang-oh/app4.R')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lec')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lab/lab10/lab10-shiny-apps/app4.R')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lab/lab10/lab10-shiny-apps/app4.R')
runApp('C:/Users/daese/Desktop/school/Stat 133/Stat 133/Labs/lab11-sang-oh/app4.R')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lec')
?sample
?sample
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lab/lab10/lab10-shiny-apps/app4.R')
coin <- c('heads', 'tails')
tossesaf <- toss(coin, times = input$times, prob = c(input$prob, 1 - input$prob))
toss <- function(x, times = 1, prob = NULL, seed) {
sample(x, size = times, replace = TRUE, prob = prob)
}
tossesaf <- toss(coin, times = input$times, prob = c(input$prob, 1 - input$prob))
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lab/lab10/lab10-shiny-apps/app4.R')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lab/lab10/lab10-shiny-apps/app4.R')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lab/lab10/lab10-shiny-apps/app4.R')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lab/lab10/lab10-shiny-apps/app4.R')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lab/lab10/lab10-shiny-apps/app4.R')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lab/lab10/lab10-shiny-apps/app4.R')
runApp('C:/Users/daese/Desktop/school/Stat 133/Stat 133/Labs/lab11-sang-oh/app4.R')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lab/lab10/lab10-shiny-apps/app4.R')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lab/lab10/lab10-shiny-apps/app4.R')
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
library(ggplot2)
library(dplyr)
#' @title Future Value
#' @description calcululate the future value of an investment
#' @param amount initial invested amount
#' @param rate annual rate of return
#' @param years numbers of years
#' @return computed future value
future_value <- function(amount, rate, years) {
return(amount * (1+rate) ^ years)
}
future_value(amount = 100, rate = 0.05, years = 1)
future_value(amount = 500, rate = 0.05, years = 5)
future_value(amount = 1000, rate = 0.05, years = 10)
#' @title Future Value of Annuity
#' @description calcululate the future value of an investment
#' @param contrib contributed amount
#' @param rate annual rate of return
#' @param years numbers of years
#' @return computed future value
annuity <- function(contrib, rate, years) {
return((contrib * ((1+rate)^years - 1)/rate))
}
annuity(contrib = 200, rate = 0.05, years = 1)
annuity(contrib = 200, rate = 0.05, years = 2)
annuity(contrib = 200, rate = 0.05, years = 10)
#' @title Future Value of Growing Annuity
#' @description calcululate the future value of an investment
#' @param contrib contributed amount
#' @param rate annual rate of return
#' @param growth annual growth rate
#' @param years numbers of years
#' @return computed future value of growing annuity
growing_annuity <- function(contrib, rate, growth, years) {
return((contrib * ((1+rate)^years - (1+growth)^years)/(rate-growth)))
}
growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = 1)
growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = 2)
growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = 10)
modalities
year <- c(0:10)
no <- c(1000.00)
fixed <- c(1000.00)
growing <- c(1000.00)
for(i in 1:10) {
fv <- future_value(1000, 0.05, i)
fva <- annuity(200, 0.05, i)
fvga <- growing_annuity(200, 0.05, 0.03, i)
no <- c(no, fv)
fixed <- c(fixed, fv+fva)
growing <- c(growing, fv+fvga)
}
modalities <- data.frame(year = year, no_contrib = no, fixed_contrib = fixed, growing_contrib = growing)
modalities
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lab/lab10/lab10-shiny-apps/app4.R')
annuity(200, 0.05, 10)
View(modalities)
annuity(200, 0.05, 0)
rep(year,3)
type <- factor(c("no_contrib", "fixed_contrib", "growing_contrib"))
type <- factor(c("no_contrib", "fixed_contrib", "growing_contrib"))
df <- data.frame(
year = rep(year, 3)
values = c(no, fixed, growing)
type <- factor(c("no_contrib", "fixed_contrib", "growing_contrib"))
df <- data.frame(
year = rep(year, 3),
values = c(no, fixed, growing),
type = rep(type, length(year)-1)
)
val <- c(no, fixed, growing)
year
re <- rep(year, 3)
tp <- rep(type, length(year)-1)
tp
type <- factor(c("no_contrib", "fixed_contrib", "growing_contrib"))
df <- data.frame(
year = rep(year, 3),
values = c(no, fixed, growing),
type = rep(type, length(year))
)
df
type <- factor(c("no_contrib", "fixed_contrib", "growing_contrib"))
df <- data.frame(
year = rep(year, 3),
values = c(no, fixed, growing),
type = rep(type, each = length(year))
)
df
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/lab/lab10/lab10-shiny-apps/app3.R')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
library(ggplot2)
library(dplyr)
#' @title Future Value
#' @description calcululate the future value of an investment
#' @param amount initial invested amount
#' @param rate annual rate of return
#' @param years numbers of years
#' @return computed future value
future_value <- function(amount, rate, years) {
return(amount * (1+rate) ^ years)
}
future_value(amount = 100, rate = 0.05, years = 1)
future_value(amount = 500, rate = 0.05, years = 5)
future_value(amount = 1000, rate = 0.05, years = 10)
#' @title Future Value of Annuity
#' @description calcululate the future value of an investment
#' @param contrib contributed amount
#' @param rate annual rate of return
#' @param years numbers of years
#' @return computed future value
annuity <- function(contrib, rate, years) {
return((contrib * ((1+rate)^years - 1)/rate))
}
annuity(contrib = 200, rate = 0.05, years = 1)
annuity(contrib = 200, rate = 0.05, years = 2)
annuity(contrib = 200, rate = 0.05, years = 10)
#' @title Future Value of Growing Annuity
#' @description calcululate the future value of an investment
#' @param contrib contributed amount
#' @param rate annual rate of return
#' @param growth annual growth rate
#' @param years numbers of years
#' @return computed future value of growing annuity
growing_annuity <- function(contrib, rate, growth, years) {
return((contrib * ((1+rate)^years - (1+growth)^years)/(rate-growth)))
}
growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = 1)
growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = 2)
growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = 10)
#4.1
year <- c(0:10)
no <- c(1000.00)
fixed <- c(1000.00)
growing <- c(1000.00)
for(i in 1:10) {
fv <- future_value(1000, 0.05, i)
fva <- annuity(200, 0.05, i)
fvga <- growing_annuity(200, 0.05, 0.03, i)
no <- c(no, fv)
fixed <- c(fixed, fv+fva)
growing <- c(growing, fv+fvga)
}
modalities <- data.frame(year = year, no_contrib = no, fixed_contrib = fixed, growing_contrib = growing)
modalities
#2
ggplot(data = modalities) + aes(x = modalities$year) + geom_line(aes(y = modalities$no_contrib, colour = "blue"), size = 1) + geom_point(aes(y = modalities$no_contrib, colour = "blue")) +
geom_line(aes(y = modalities$fixed_contrib, colour = "green"), size = 1) + geom_point(aes(y = modalities$fixed_contrib, colour = "green")) + geom_line(aes(y = modalities$growing_contrib, colour = "red"), size = 1) + geom_point(aes(y = modalities$growing_contrib, colour = "red")) + scale_colour_discrete(name = 'Modality', labels = c("no_contrib", "fixed_contrib", "growing_contrib")) + xlab("Year") + ylab("Investment in $") + ggtitle("Modality Graphs") + scale_x_continuous(breaks = seq(0, 10, 2)) + theme_bw()
t <- factor(c("no_contrib", "fixed_contrib", "growing_contrib"))
df <- data.frame(
year = rep(year, 3),
value = c(no, fixed, growing),
type = rep(t, length(year))
)
df %>% ggplot(aes(x = year, y = value, group = type)) + geom_line(aes(color = type), size = 1) + geom_point(aes(color = type)) + ggtitle("Three modes of investing")
df
t <- factor(c("no_contrib", "fixed_contrib", "growing_contrib"))
df <- data.frame(
year = rep(year, 3),
value = c(no, fixed, growing),
type = rep(t, each = length(year))
)
df
df %>% ggplot(aes(x = year, y = value, group = type)) + geom_line(aes(color = type), size = 1) + geom_point(aes(color = type)) + ggtitle("Three modes of investing")
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
df
df %>% ggplot(aes(x = year, y = value, group = type)) + geom_line(aes(color = type), size = 1) + geom_point(aes(color = type)) + ggtitle("Three modes of investing")
df %>% ggplot(aes(x = year, y = value, group = type)) +  geom_line(aes(color = type), size = 1) + ggtitle("Three modes of investing")
df %>% ggplot(aes(x = year, y = value, group = type)) + geom_point(aes(color = type)) +  geom_line(aes(color = type), size = 1) + ggtitle("Three modes of investing")
t <- factor(c(1, 2, 3))
t <- factor(c(1, 2, 3))
df <- data.frame(
year = rep(year, 3),
value = c(no, fixed, growing),
type = rep(t, each = length(year))
)
df
df %>% ggplot(aes(x = year, y = value, group = type)) + geom_point(aes(color = type)) +  geom_line(aes(color = type), size = 1) + ggtitle("Three modes of investing")
df %>% ggplot(aes(x = year, y = value, group = type)) + geom_point(aes(color = type)) +  geom_line(aes(color = type), size = 1) + ggtitle("Three modes of investing") + scale_color_discrete(labels <- c("no_contrib", "fixed_contrib", "growing_contrib"))
df %>% ggplot(aes(x = year, y = value, group = type)) + geom_point(aes(color = type)) +  geom_line(aes(color = type), size = 1) + ggtitle("Three modes of investing") + scale_color_discrete(labels = c("no_contrib", "fixed_contrib", "growing_contrib"))
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
factor("no_contrib")
as.integer(factor("no_contrib"))
as.integer(factor(c("no_contrib", "fixed_contrib", "growing_contrib")))
t <- c("no_contrib", "fixed_contrib", "growing_contrib")
df <- data.frame(
year = rep(year, 3),
value = c(no, fixed, growing),
type = rep(t, each = length(year))
)
df
df %>% ggplot(aes(x = year, y = value, group = type)) + geom_point(aes(color = type)) +  geom_line(aes(color = type), size = 1) + ggtitle("Three modes of investing")
as.integer(t)
t <- c("no_contrib", "fixed_contrib", "growing_contrib")
df <- data.frame(
year = rep(year, 3),
value = c(no, fixed, growing),
type = rep(t, each = length(year))
)
df
df %>% ggplot(aes(x = year, y = value, group = type)) + geom_point(aes(color = type)) +  geom_line(aes(color = type), size = 1) + ggtitle("Three modes of investing")
as.integer(t)
as.numeric(as.character(t))
t <- factor(c("no_contrib", "fixed_contrib", "growing_contrib"))
as.numeric(as.character(t))
as.character(t)
as.numeric(t)
as.numeric(c("cake"))
t <- factor(c("no_contrib", "fixed_contrib", "growing_contrib"))
t <- as.numeric(as.character(t))
df <- data.frame(
year = rep(year, 3),
value = c(no, fixed, growing),
type = rep(t, each = length(year))
)
df
df %>% ggplot(aes(x = year, y = value, group = type)) + geom_point(aes(color = type)) +  geom_line(aes(color = type), size = 1) + ggtitle("Three modes of investing")
t <- factor(c("no_contrib", "fixed_contrib", "growing_contrib"))
df <- data.frame(
year = rep(year, 3),
value = c(no, fixed, growing),
type = rep(t, each = length(year))
)
df
df %>% ggplot(aes(x = year, y = value, group = type)) + geom_point(aes(color = type)) +  geom_line(aes(color = type), size = 1) + ggtitle("Three modes of investing")
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
df %>% ggplot(aes(x = year, y = value, group = type)) + geom_point(aes(color = type)) +  geom_line(aes(color = type), size = 1) + ggtitle("Three modes of investing") + facet_wrap(type)
t <- factor(c("no_contrib", "fixed_contrib", "growing_contrib"))
df <- data.frame(
year = rep(year, 3),
value = c(no, fixed, growing),
type = rep(t, each = length(year))
)
df
df %>% ggplot(aes(x = year, y = value, group = type)) + geom_point(aes(color = type)) +  geom_line(aes(color = type), size = 1) + ggtitle("Three modes of investing") + facet_wrap(type)
df %>% ggplot(aes(x = year, y = value, group = type)) + geom_point(aes(color = type)) +  geom_line(aes(color = type), size = 1) + ggtitle("Three modes of investing") + facet_wrap(df$type)
df %>% ggplot(aes(x = year, y = value, group = type)) + geom_point(aes(color = type)) +  geom_line(aes(color = type), size = 1) + ggtitle("Three modes of investing") + facet_wrap(df$type) + geom_area(aes(color = type))
df %>% ggplot(aes(x = year, y = value, group = type)) + geom_point(aes(color = type)) +  geom_line(aes(color = type), size = 1) + ggtitle("Three modes of investing") + facet_wrap(df$type) + geom_area(aes(fill = type))
df %>% ggplot(aes(x = year, y = value, group = type)) + geom_point(aes(color = type)) +  geom_line(aes(color = type), size = 1) + ggtitle("Three modes of investing") + facet_wrap(df$type) + geom_area(aes(fill = type)) + theme_bw()
?geom_area
df %>% ggplot(aes(x = year, y = value, group = type)) + geom_point(aes(color = type)) +  geom_line(aes(color = type), size = 1) + ggtitle("Three modes of investing") + facet_wrap(df$type) + geom_area(aes(fill = type), alpha = 0.6) + theme_bw()
df %>% ggplot(aes(x = year, y = value, group = type)) + geom_point(aes(color = type)) +  geom_line(aes(color = type), size = 1) + ggtitle("Three modes of investing") + facet_wrap(df$type) + geom_area(aes(fill = type), alpha = 0.5) + theme_bw()
df %>% ggplot(aes(x = year, y = value, group = type)) + geom_point(aes(color = type)) +  geom_line(aes(color = type), size = 1) + ggtitle("Three modes of investing") + facet_wrap(df$type) + geom_area(aes(fill = type), alpha = 0.4) + theme_bw()
df %>% ggplot(aes(x = year, y = value, group = type)) + geom_point(aes(color = type)) +  geom_line(aes(color = type), size = 1) + ggtitle("Three modes of investing") + facet_wrap(df$type) + geom_area(aes(fill = type), alpha = 0.3) + theme_bw()
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
df %>% ggplot(aes(x = year, y = value, group = type)) + geom_point(aes(color = type)) +  geom_line(aes(color = type), size = 1) + ggtitle("Three modes of investing") + facet_wrap(df$type) + geom_area(aes(fill = type), alpha = 0.4) + theme_bw()
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
df %>% ggplot(aes(x = year, y = value, group = variable)) + geom_line(aes(color = variable), size = 1) + geom_point(aes(color = variable)) + geom_area(aes(fill = variable), alpha = 0.4) + ggtitle("Three modes of investing") scale(labels = c("no_contrib", "fixed_contrib", "growing_contrib")) + facet_wrap(df$variable) + theme_bw()
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
df %>% ggplot(aes(x = year, y = value, group = variable)) + geom_line(aes(color = variable), size = 1) + geom_point(aes(color = variable)) + geom_area(aes(fill = variable), alpha = 0.4) + ggtitle("Three modes of investing") + scale(labels = c("no_contrib", "fixed_contrib", "growing_contrib")) + facet_wrap(df$variable) + theme_bw()
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
df %>% ggplot(aes(x = year, y = value, group = variable)) + geom_line(aes(color = variable), size = 1) + geom_point(aes(color = variable)) + geom_area(aes(fill = variable), alpha = 0.4) + ggtitle("Three modes of investing") + scale_color_discrete(labels = c("no_contrib", "fixed_contrib", "growing_contrib")) + facet_wrap(df$variable) + theme_bw()
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
df %>% ggplot(aes(x = year, y = value, group = variable)) + geom_line(aes(color = variable), size = 1) + geom_point(aes(color = variable)) + geom_area(aes(fill = variable), alpha = 0.4) + ggtitle("Three modes of investing") + scale_color_discrete(labels = c("no_contrib", "fixed_contrib", "growing_contrib")) + scale_fill_discrete(labels = c("no_contrib", "fixed_contrib", "growing_contrib")) + facet_wrap(df$variable) + theme_bw()
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
?facet_wrap
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
lbs = c(1 = "no_contrib", 2 = "fixed_contrib", 3 = "growing_contrib")
lbs
lbs["a"]
lbs[1]
names(lbs)
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
?sliderInput
?plotOutput
?mainPanel
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
?column
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='faderybeetles',
token='6CD5AC1E2B26EBF0F7002B707C6753E8',
secret='<SECRET>')
rsconnect::setAccountInfo(name='faderybeetles', token='6CD5AC1E2B26EBF0F7002B707C6753E8', secret='JoJ2wjeqLxZVYHjUvf/K7N9emR+Gq32kQzBVIBoN')
getwd()
setwd("../Desktop/Spring 2019/Stat 133/hw-stat133/workout02")
library(rsconnect)
rsconnect::deployApp('shiny/app.R')
library(rsconnect)
rsconnect::deployApp('shiny/')
library(rsconnect)
rsconnect::deployApp('shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
library(rsconnect)
rsconnect::deployApp('shiny')
runApp('C:/Users/daese/Desktop/Spring 2019/STAT 133/hw-stat133/workout02/shiny')
